//23. 合并K个元素的有序链表
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        if(lists.empty())return nullptr;
        auto m=lists.size();
        if(m==1)return lists[0];
        else if(m==2)
        {
            return merge(lists[0],lists[1]);
        }
        auto mid=m/2;
        vector<ListNode*>v1,v2;
        for(int i=0;i<m;++i){
            if(i<=mid)v1.push_back(lists[i]);
            else v2.push_back(lists[i]);
        }
        auto res1=mergeKLists(v1);
        auto res2=mergeKLists(v2);
        return merge(res1,res2);
    }
private:
    ListNode* merge(ListNode* h1,ListNode* h2){
        ListNode dummy(0);
        auto head=&dummy;
        while(h1&&h2){
            if(h1->val<h2->val){
                head->next=h1;
                h1=h1->next;
            }else
            {
                head->next=h2;
                h2=h2->next;
            }
            head=head->next;
        }
        if(h1){
            head->next=h1;
        }
        if(h2){
            head->next=h2;
        }
        return dummy.next;
    }
};
