class Solution {
public:
    vector<string> restoreIpAddresses(const string& s) {
        vector<string>ret;
        if(s.empty())return ret;
        string tmp;
        backtrack(ret, tmp, s, 0, 0);
        return ret;
    }
    
    void backtrack(vector<string>&ret, string &tmp, const string& s, int index, int count){
        if(count>4)return;
        auto n=s.size();
        if(index==n && count==4){
            ret.push_back(tmp);
            return;
        }
        for(int i=1; i<4; ++i){
            if(index+i > n)break;
            auto t=s.substr(index, i);
            if(t.size()>1 && t[0]=='0' || (i==3 && stoi(t, 0)>255))continue;
            if(count==3){
                string str=tmp+t+"";
                backtrack(ret,  str, s, index+i, count+1);
            }else{
                string str=tmp+t+".";
                backtrack(ret,  str, s, index+i, count+1);
            }
        }
    }
};
