class Solution {
public:
    void gameOfLife(vector<vector<int>>& board) {
        if(board.empty() || board[0].empty())return ;
        auto m = board.size(), n = board[0].size();
        auto lives=0;
        for(int i=0; i<m; ++i){
            for(int j=0; j<n; ++j){
                lives=func(board, i, j);
                if(board[i][j]==1 && (lives>=2 && lives<=3))
                    board[i][j]=3;
                if(board[i][j]==0 && lives==3)
                    board[i][j]=2;
            }
        }
        for(int i=0; i<m; ++i){
            for(int j=0; j<n; ++j){
                 board[i][j]>>=1;
            }
        }
    }
    int func(vector<vector<int>>& board, int i, int j){
        int m = board.size(), n = board[0].size();
        auto lives=0;
        for(int x=max(0,i-1); x<=min(m-1,i+1); ++x){
            for(int y=max(0,j-1); y<=min(n-1,j+1); ++y){
                lives+=board[x][y]&1;
            }
        }
        lives-=board[i][j]&1;
        return lives;
    }
};
