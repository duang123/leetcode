class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        if(nums.empty())return 0;
        vector<int>dp(nums.size(),0);
        dp[0]=nums[0];
        int ret=dp[0];
        for(int i=1;i!=dp.size();++i){
            dp[i]=nums[i]+(dp[i-1]>0? dp[i-1]:0);
            ret=max(ret,dp[i]);
        }
        return ret;
    }
    //second way
    int maxSubArray(vector<int>& nums) {
        if(nums.empty())return 0;
        int local_max=nums[0],ret=nums[0];
        for(int i=1;i!=nums.size();++i){
            if(local_max<0)local_max=nums[i];
            else local_max=local_max+nums[i];
            ret=max(ret,local_max);
        }
        return ret;
    }
};
