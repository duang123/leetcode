/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* sortList(ListNode* head) {
        if(!head || !head->next)return head;
        auto mid=findMid(head);
        auto midNext=mid->next;
        mid->next=nullptr;
        auto l=sortList(head);
        auto r=sortList(midNext);
        auto ret=merge(l,r);
        return ret;
    }
    ListNode* findMid(ListNode* head){
        if(!head || !head->next)return head;
        auto slow=head,fast=head->next;
        while(fast->next && fast->next->next){
            slow=slow->next;
            fast=fast->next->next;
        }
        return slow;
    }
    
    ListNode* merge(ListNode*l, ListNode*r){
        if(!l)return r;
        if(!r)return l;
        ListNode dummy(-1);
        auto tail=&dummy;
        while(l && r){
            if(l->val<r->val){
                tail->next=l;
                tail=l;
                l=l->next;
                
            }else{
                tail->next=r;
                tail=r;
                r=r->next;
            }
        }
        if(l)tail->next=l;
        if(r)tail->next=r;
        return dummy.next;
    }
    
};
