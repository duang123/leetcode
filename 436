#436. Find Right Interval
/**
 * Definition for an interval.
 * struct Interval {
 *     int start;
 *     int end;
 *     Interval() : start(0), end(0) {}
 *     Interval(int s, int e) : start(s), end(e) {}
 * };
 */
class Solution {
public:
    vector<int> findRightInterval(vector<Interval>& intervals) {
        map<int,int>mp;
        vector<int>ret(intervals.size(),-1);
        for(int i=0;i!=intervals.size();++i)mp[intervals[i].start]=i;
        for(int i=0;i!=intervals.size();++i){
            if(mp.lower_bound(intervals[i].end)!=mp.end())ret[i]=mp.lower_bound(intervals[i].end)->second;
        }
        return ret;
    }
};
