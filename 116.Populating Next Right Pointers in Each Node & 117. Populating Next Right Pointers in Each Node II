/**
 * Definition for binary tree with next pointer.
 * struct TreeLinkNode {
 *  int val;
 *  TreeLinkNode *left, *right, *next;
 *  TreeLinkNode(int x) : val(x), left(NULL), right(NULL), next(NULL) {}
 * };
 */
class Solution {
public:
    void connect(TreeLinkNode *root) {
        if(!root)return;
        while(root->left){
            auto p = root;
            while(p){
                p->left->next = p->right;
                if(p->next)
                    p->right->next = p->next->left;
                p = p->next;
            }
            root = root->left;
        }
        
    }
    
        void connectII(TreeLinkNode *root) {
        if(!root)return;
        TreeLinkNode *head=nullptr, *prev=nullptr, *cur=root;
        while(cur){
            while(cur){
                if(cur->left){
                    if(prev)
                        prev->next=cur->left;
                    else head=cur->left;
                    prev=cur->left;
                }
                if(cur->right){
                    if(prev)
                        prev->next=cur->right;
                    else head=cur->right;
                    prev=cur->right;
                }
                cur=cur->next;
            }
            cur=head;
            prev=nullptr;
            head=nullptr;
        }
    }
};
