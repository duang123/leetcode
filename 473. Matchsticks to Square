class Solution {
public:
    bool makesquare(vector<int>& nums) {
        if(nums.size() < 4)return false;
        int target=0;
        for(auto i :nums)
            target+=i;
        if(target % 4)return false;
        target/=4;
        vector<int>v(4, 0);
        sort(nums.begin(), nums.end(), greater<int>());
        return dfs(nums, v, 0, target);
    }
    
    bool dfs(vector<int>& nums, vector<int>&v, int index, int target){
        if(index == nums.size())
            return v[0]==v[1] && v[2]==v[1] && v[2]==v[3] ;
        for(int i=0; i<4; ++i){
            if(target < nums[index] + v[i])
                continue;
            v[i]+=nums[index];
            if(dfs(nums, v, index+1, target))
                return true;
            v[i]-=nums[index];
        }
        return false;
    }
};
